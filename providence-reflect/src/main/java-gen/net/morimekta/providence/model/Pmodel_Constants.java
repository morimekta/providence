package net.morimekta.providence.model;

/**
 * Reflective thrift IDL description.
 * <p>
 * Comments are gathered before the start of the next statement.
 * <p>
 * - Line comments are accumulated with newline delimiter.
 *   Each line is individually trimmed.
 * - Block comments replace the entire comment.
 *   The first space after &#39;*&#39; on each line is ignored.
 */
@javax.annotation.Generated("providence-maven-plugin")
@SuppressWarnings("unused")
public class Pmodel_Constants {
    private Pmodel_Constants() {}

    public static final java.util.Set<String> kThriftKeywords = new net.morimekta.providence.descriptor.PSet.DefaultBuilder<String>()
            .add("struct")
            .add("exception")
            .add("bool")
            .add("string")
            .add("const")
            .add("i32")
            .add("required")
            .add("i16")
            .add("map")
            .add("include")
            .add("set")
            .add("void")
            .add("byte")
            .add("i64")
            .add("double")
            .add("optional")
            .add("union")
            .add("list")
            .add("throws")
            .add("typedef")
            .add("enum")
            .add("oneway")
            .add("i8")
            .add("extends")
            .add("service")
            .add("binary")
            .add("namespace")
            .build();

    public static final java.util.Set<String> kReservedWords = new net.morimekta.providence.descriptor.PSet.DefaultBuilder<String>()
            .add("def")
            .add("del")
            .add("elsif")
            .add("when")
            .add("endwhile")
            .add("nil")
            .add("lambda")
            .add("protected")
            .add("else")
            .add("catch")
            .add("if")
            .add("case")
            .add("in")
            .add("pass")
            .add("var")
            .add("module")
            .add("is")
            .add("elif")
            .add("then")
            .add("as")
            .add("transient")
            .add("except")
            .add("begin")
            .add("global")
            .add("long")
            .add("default")
            .add("goto")
            .add("native")
            .add("unless")
            .add("assert")
            .add("yield")
            .add("xor")
            .add("endswitch")
            .add("break")
            .add("undef")
            .add("enddeclare")
            .add("abstract")
            .add("throw")
            .add("self")
            .add("return")
            .add("register")
            .add("synchronized")
            .add("declare")
            .add("use")
            .add("do")
            .add("float")
            .add("while")
            .add("continue")
            .add("elseif")
            .add("function")
            .add("endfor")
            .add("raise")
            .add("dynamic")
            .add("from")
            .add("new")
            .add("ensure")
            .add("package")
            .add("static")
            .add("sizeof")
            .add("finally")
            .add("this")
            .add("try")
            .add("exec")
            .add("implements")
            .add("next")
            .add("private")
            .add("virtual")
            .add("import")
            .add("for")
            .add("redo")
            .add("interface")
            .add("delete")
            .add("switch")
            .add("foreach")
            .add("not")
            .add("public")
            .add("and")
            .add("alias")
            .add("end")
            .add("class")
            .add("rescue")
            .add("retry")
            .add("or")
            .add("volatile")
            .add("int")
            .add("instanceof")
            .add("args")
            .add("super")
            .add("with")
            .add("print")
            .add("inline")
            .add("clone")
            .add("short")
            .add("unsigned")
            .add("endif")
            .add("until")
            .add("endforeach")
            .build();
}
