variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-B -fae"
  MAVEN_NO_PACKAGING: "-Ddisable.distribution.packaging=true"
  MAVEN_NO_TESTS: "-DskipTests=true"

stages:
- testing
- release
- post-release

cache:
  key: "$CI_PROJECT_NAME"
  paths:
  - .m2/repository

after_script:
# Never cache the itself.
- rm -rf .m2/repository/net/morimekta/providence/

.verify: &verify
  stage: testing
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /\[silent-ignore\]/
    - $CI_COMMIT_MESSAGE =~ /\[maven-release-plugin\]/
  before_script:
  - mkdir -p .m2/repository
  script:
  - mkdir -p .m2/repository
  - mvn ${MAVEN_CLI_OPTS} ${MAVEN_NO_PACKAGING} verify -Plib,cli
  - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print int(100*covered/instructions), "% covered" }' */target/site/jacoco-ut/jacoco.csv
  - |
    # Report coverage when: BRANCH=master JOB=verify:jdk8
    NUM_JAVA=$(git diff HEAD~ --name-only | grep '.java$' | wc -l)
    if [[ "${CI_JOB_NAME}" == "verify:jdk8" && "${CI_BUILD_REF_NAME}" == "master" && $NUM_JAVA -gt 0 ]]
    then
      echo "Sending jacoco coverage report to codecov.io"
      curl -s https://codecov.io/bash | bash -s
    fi
  coverage: /([0-9]{1,3}) % covered/

verify:jdk8:
  <<: *verify
  image:
    name: maven:3.5-jdk-8-alpine
    entrypoint: ["/bin/bash", "-c"]
  before_script:
  - apk add --no-cache git

verify:jdk11:
  <<: *verify
  image:
    name: maven:3.5-jdk-11-slim
    entrypoint: ["/bin/bash", "-c"]
  before_script:
  - apt-get update
  - apt-get install -y git

packaging:
  stage: release
  image: maven:3.5-jdk-8-alpine
  only:
  - tags
  before_script:
  - apk update
  - apk add --no-cache git rpm
  - mkdir -p .m2/repository
  script:
  - mvn ${MAVEN_CLI_OPTS} ${MAVEN_NO_TESTS} package -Plib,cli
  - mv providence-tools/target/providence-tools-*.tar.gz .
  - mv providence-tools/target/providence-*.deb .
  - mv providence-tools/target/rpm/providence/RPMS/noarch/providence-*.noarch.rpm .
  artifacts:
    paths:
    - providence-tools-*.tar.gz
    - providence-*.deb
    - providence-*.noarch.rpm

pages:
  image: ruby:2.5
  cache:
    key: "vendor-$CI_PROJECT_NAME"
    paths:
    - docs/vendor/
  stage: post-release
  before_script:
  - cd docs
  - bundle install --path vendor
  script:
  - bundle exec jekyll build -d public
  - mv public ..
  artifacts:
    paths:
    - public
  only:
  - master
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /\[silent-ignore\]/
    - $CI_COMMIT_MESSAGE =~ /\[maven-release-plugin\]/      
